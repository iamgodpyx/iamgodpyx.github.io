{"version":3,"file":"static/js/async/tools/page.7387dc46.js","sources":["webpack://thrift-to-ts-online/./src/lib/es6_check/src/log.ts","webpack://thrift-to-ts-online/./src/lib/es6_check/src/source-map.ts","webpack://thrift-to-ts-online/./src/lib/es6_check/src/script.ts","webpack://thrift-to-ts-online/./src/lib/es6_check/src/parse.ts","webpack://thrift-to-ts-online/./src/lib/es6_check/src/html.ts","webpack://thrift-to-ts-online/./src/routes/tools/utils.ts","webpack://thrift-to-ts-online/./src/routes/tools/page.tsx","webpack://thrift-to-ts-online/./src/lib/tools/format.ts"],"sourcesContent":["// @ts-ignore\nimport debug from \"debug\";\n\nconst log = debug(\"es6Check\");\n\nexport default log;\n","import path from \"path\";\nimport fs from \"fs\";\n// source-map 这个库通过是否有 fetch 对象来判断是否是 node 环境， 所以不能使用 fetch\nimport axios from \"axios\";\nimport { RawSourceMap, SourceMapConsumer } from \"source-map\";\n\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#\nfunction hasSourceMap(content: string) {\n  const lines = content.split(\"\\n\");\n\n  const lastLine = lines[lines.length - 1];\n\n  if (lastLine && lastLine.startsWith(\"//# sourceMappingURL=\")) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getSourceMapURI(content: string) {\n  if (!hasSourceMap(content)) {\n    return \"\";\n  }\n\n  const lines = content.split(\"\\n\");\n  const lastLine = lines[lines.length - 1];\n  return lastLine.replace(\"//# sourceMappingURL=\", \"\").trim();\n}\n\nasync function resolveSourceMapContent(\n  content: string,\n  filepath: string\n): Promise<RawSourceMap | null> {\n  const sourceMapURI = getSourceMapURI(content);\n\n  if (!sourceMapURI) {\n    return null;\n  }\n\n  if (sourceMapURI.startsWith(\"http\") || sourceMapURI.startsWith(\"//\")) {\n    console.log(\"sourceMap 似乎是 URL\", sourceMapURI, \"尝试通过请求获取\");\n    try {\n      const resp = await axios.get(sourceMapURI);\n      console.log(\"sourceMap 请求结果返回\", resp.data);\n      return JSON.parse(resp.data) as RawSourceMap;\n    } catch (err) {\n      console.error(\"error\", err);\n    }\n  } else {\n    const fileDir = path.dirname(filepath);\n\n    const sourceMapPath = path.join(fileDir, sourceMapURI);\n    console.log(\"尝试读取本地 SourceMap 文件\", sourceMapURI, sourceMapPath);\n\n    if (fs.existsSync(sourceMapPath)) {\n      console.log(`${sourceMapPath} 文件存在， 读取内容`);\n      const content = fs.readFileSync(sourceMapPath, \"utf8\");\n      try {\n        return JSON.parse(content) as RawSourceMap;\n      } catch (e) {\n        console.log(`将 ${sourceMapPath} 内容解析成 JSON 失败, 返回 null`);\n        console.error(\"error\", e);\n      }\n    } else {\n      console.log(`未能找到 SourceMap 文件`);\n    }\n  }\n\n  return null;\n}\n\nasync function getContentOriginPosition(\n  rawContent: string,\n  sourceMap: string,\n  position: { line: number; column: number }\n) {\n  // const sourceMap = await resolveSourceMapContent(rawContent, filapath);\n\n  if (!sourceMap) {\n    return null;\n  }\n\n  // console.log(`解析到 sourceMap 文件, 产物名称为 ${sourceMap.file}`);\n  console.log({ position });\n\n\n  const origionalPosition = await SourceMapConsumer.with(\n    sourceMap,\n    null,\n    (consumer: any) => {\n      const originalPosition = consumer.originalPositionFor(position);\n      return originalPosition;\n    }\n  );\n\n  return origionalPosition;\n}\n\nexport {\n  hasSourceMap,\n  getSourceMapURI,\n  resolveSourceMapContent,\n  getContentOriginPosition,\n};\n","import * as parser from \"@babel/parser\";\n// @ts-ignore\nimport traverse from \"@babel/traverse\";\nimport myPlugin from \"./safari10_bug_check_plugin\";\nimport parseJS from \"./parse\";\nimport fetchText from \"./request\";\nimport fs from \"fs\";\nimport { NullableMappedPosition } from \"source-map\";\n\nimport { getContentOriginPosition } from \"./source-map\";\n\nenum ScriptType {\n  URL = \"URL\",\n  INLINE = \"INLINE\",\n}\n\nexport interface ParseResult {\n  info: string;\n  type: ScriptType;\n  // success为成功, 其他都是失败\n  message: string | ParseError;\n  errorPos?: ParseError;\n}\n\nexport interface ParseResultWithOriginPos extends ParseResult {\n  originPos?: NullableMappedPosition;\n}\n\nexport interface CheckResult {\n  has_error: boolean;\n  type: ScriptType;\n  // success为成功, 其他都是失败\n  message: string;\n}\n\ninterface ParseError extends Error {\n  pos: number;\n  loc: {\n    line: number;\n    column: number;\n  };\n  raisedAt: number;\n}\n\nfunction isECMAScriptES5(script: string): ParseResult {\n  let message = \"success\";\n  let errorPos: ParseError | undefined;\n  try {\n    parseJS(script);\n  } catch (err) {\n    const errorWithType = err as ParseError;\n    errorPos = errorWithType;\n    const { pos } = errorWithType;\n    const SPLIT_LENGTH = 35;\n    let startPos = pos - SPLIT_LENGTH;\n    if (startPos < 0) {\n      startPos = 0;\n    }\n    const CONTENT = script.slice(startPos, pos + SPLIT_LENGTH);\n    message = CONTENT;\n  }\n  return {\n    info: script,\n    type: ScriptType.INLINE,\n    errorPos,\n    message,\n  };\n}\n\nasync function isECMAScriptURLES5(url: string): Promise<ParseResult> {\n  let text = \"\";\n  try {\n    text = await fetchText(url);\n  } catch (err) {\n    return {\n      info: url,\n      type: ScriptType.URL,\n      message: \"获取文件失败\",\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/await-thenable\n  const resp = await isECMAScriptES5(text);\n  return {\n    info: url,\n    type: ScriptType.URL,\n    message: resp.message,\n  };\n}\n\nasync function hasSafari10ErrorByURL(url: string): Promise<CheckResult> {\n  let text = \"\";\n  try {\n    text = await fetchText(url);\n  } catch (err) {\n    return {\n      has_error: false,\n      type: ScriptType.URL,\n      message: \"获取文件失败\",\n    };\n  }\n\n  const resp = await hasSafari10Error(text);\n  return {\n    has_error: resp.has_error,\n    type: ScriptType.URL,\n    message: resp.message,\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/require-await\nasync function hasSafari10Error(script: string): Promise<CheckResult> {\n  try {\n    // eslint-disable-next-line\n    const ast = parser.parse(script);\n    const polyfills = new myPlugin();\n    traverse(ast, polyfills.visitor());\n    if (!polyfills.hasError) {\n      return {\n        has_error: polyfills.hasError,\n        type: ScriptType.INLINE,\n        message: \"success\",\n      };\n    } else {\n      return {\n        has_error: polyfills.hasError,\n        type: ScriptType.INLINE,\n        message: \"检测文件在 Safari10 浏览器存在 Bug\",\n      };\n    }\n  } catch (err) {\n    return {\n      has_error: false,\n      type: ScriptType.INLINE,\n      message: \"文件在 Safari10 浏览器是否存在 Bug 检测过程中检测失败\",\n    };\n  }\n}\n\n/**\n * @param filepath 可以是本地路径或者是线上 URL 地址\n */\nasync function validateScriptByURL(\n  filepath: string\n): Promise<ParseResultWithOriginPos> {\n  const content = fs.readFileSync(filepath, \"utf8\");\n\n  const result = isECMAScriptES5(content);\n\n  if (result.message === \"success\") {\n    return result;\n  }\n\n  const originPos = await getContentOriginPosition(content, filepath, {\n    // eslint-disable-next-line\n    line: result?.errorPos?.loc?.line!,\n    // eslint-disable-next-line\n    column: result?.errorPos?.loc?.column!,\n  });\n\n  return {\n    ...result,\n    originPos: originPos || undefined,\n  };\n}\n\nexport {\n  isECMAScriptES5,\n  isECMAScriptURLES5,\n  hasSafari10ErrorByURL,\n  hasSafari10Error,\n  validateScriptByURL,\n};\n","import { parse } from 'acorn'\n\nfunction parseJS(jsStr: string) {\n    return parse(jsStr, { ecmaVersion: 5 })\n}\n\nexport default parseJS\n","import { isECMAScriptES5, isECMAScriptURLES5, ParseResult } from \"./script\";\nimport fetchHTML from \"./request\";\nimport { cheerio } from \"./npm\";\nimport { replaceURLHost } from \"./util\";\nimport log from \"./log\";\n// import { validateMetrics } from './metrics'\n\ninterface HTMLParseResult {\n  // 引入的脚本\n  urls: string[];\n  // 内嵌在html里面的脚本\n  scriptStrs: string[];\n}\n\ninterface HTMLValidateResult {\n  data: ParseResult[];\n  ok: boolean;\n}\n\ninterface ValidateConfig {\n  whiteList?: string[];\n  // 替换url中的域名\n  address?: string;\n}\n\nfunction getHTMLScripts(html: string): HTMLParseResult {\n  const urls: string[] = [];\n  const scriptStrs: string[] = [];\n\n  const $ = cheerio.load(html);\n\n  const scripts = $(\"script\");\n  scripts.map((_: any, val: any) => {\n    // http://es6.ruanyifeng.com/#docs/module-loader 过滤掉module模块\n    if (val.attribs.src && val.attribs.type !== \"module\") {\n      urls.push(val.attribs.src);\n    } else if (\n      val.children.length > 0 &&\n      (!val.attribs.type ||\n        val.attribs.type === \"application/javascript\" ||\n        val.attribs.type === \"text/javascript\")\n    ) {\n      const children = val.children;\n      children.map((child: any) => {\n        // @ts-ignore\n        if (child.data) {\n          // @ts-ignore\n          scriptStrs.push(child.data);\n        }\n      });\n    }\n  });\n\n  return {\n    urls,\n    scriptStrs,\n  };\n}\n\nasync function isHTMLContainES6(\n  html: string,\n  opts: ValidateConfig\n): Promise<HTMLValidateResult> {\n  const scriptObj = getHTMLScripts(html);\n\n  const externalScripts = scriptObj.urls.filter((url) => {\n    if (opts.whiteList) {\n      const whiteList = opts.whiteList;\n      return whiteList.every((str) => {\n        if (str === url) {\n          return false;\n        }\n        return true;\n      });\n    }\n    return true;\n  });\n  const scriptsResp = await Promise.all(\n    externalScripts.map(isECMAScriptURLES5)\n  );\n\n  const inlineScriptResp = await Promise.all(\n    scriptObj.scriptStrs.map(isECMAScriptES5)\n  );\n\n  const allResult = [...scriptsResp, ...inlineScriptResp];\n\n  const allScriptValid = allResult.every((val) => val.message === \"success\");\n  return {\n    ok: allScriptValid,\n    data: allResult,\n  };\n}\n\nasync function isHTMLInlineScriptContainES6(\n  html: string\n): Promise<HTMLValidateResult> {\n  const scriptObj = getHTMLScripts(html);\n\n  const inlineScriptResp = await Promise.all(\n    scriptObj.scriptStrs.map(isECMAScriptES5)\n  );\n\n  const allResult = [...inlineScriptResp];\n\n  const allScriptValid = allResult.every((val) => val.message === \"success\");\n  return {\n    ok: allScriptValid,\n    data: allResult,\n  };\n}\n\nasync function isHTMLURLContainES6(url: string, opts: ValidateConfig = {}) {\n  log(\"opts\", opts);\n  log(\"[start/getHTML] raw url\", url);\n\n  let htmlURL = url;\n  if (opts.address) {\n    htmlURL = replaceURLHost(url, opts.address);\n  }\n\n  log(\"[start/getHTML] query url\", htmlURL);\n  const html = await fetchHTML(htmlURL);\n  log(\"[end/getHTML]\", htmlURL);\n  const resp = await isHTMLContainES6(html, opts);\n  return {\n    ...resp,\n    html: url,\n  };\n}\n\nasync function isHTMLURLArrayContainES6(\n  urls: string[],\n  opts: ValidateConfig = {}\n) {\n  // validateMetrics.input()\n\n  let fmtedURLs = urls;\n  if (opts.address) {\n    fmtedURLs = urls.map((str) => replaceURLHost(str, opts.address!));\n  }\n\n  // 获取所有的html内容\n  const htmlContents = await Promise.all(fmtedURLs.map(fetchHTML));\n\n  const allScripts = new Set<string>();\n  const whiteListScripts = new Set<string>(opts.whiteList || []);\n\n  const htmlInfo = htmlContents.map(getHTMLScripts).map((value, i) => {\n    return {\n      ...value,\n      html: fmtedURLs[i],\n      content: htmlContents[i],\n    };\n  });\n\n  htmlInfo.forEach((info) => {\n    info.urls.forEach((scriptURL) => {\n      if (!whiteListScripts.has(scriptURL)) {\n        allScripts.add(scriptURL);\n      }\n    });\n  });\n\n  const scriptsResult = await Promise.all(\n    Array.from(allScripts).map(isECMAScriptURLES5)\n  );\n\n  const scriptsMap = new Map<string, ParseResult>();\n  scriptsResult.forEach((result) => {\n    scriptsMap.set(result.info, result);\n  });\n\n  const totalResult: HTMLValidateResult[] = htmlInfo.map((info) => {\n    const inlineResult = info.scriptStrs.map(isECMAScriptES5);\n    const urlResult = info.urls.map((url) => {\n      if (whiteListScripts.has(url)) {\n        return {\n          info: url,\n          type: \"URL\",\n          message: \"success\",\n        } as ParseResult;\n      }\n      return scriptsMap.get(url) as ParseResult;\n    });\n\n    const results = [...inlineResult, ...urlResult];\n    const ok = results.every((val) => val.message === \"success\");\n    return {\n      ok,\n      html: info.html,\n      content: info.content,\n      data: results,\n    };\n  });\n\n  const isAllHTMLPass = totalResult.every((val) => !!val.ok);\n\n  // if (isAllHTMLPass) {\n  //     validateMetrics.pass()\n  // } else {\n  //     validateMetrics.fail()\n  // }\n\n  return {\n    ok: isAllHTMLPass,\n    data: totalResult,\n  };\n}\n\nexport {\n  isHTMLContainES6,\n  isHTMLInlineScriptContainES6,\n  isHTMLURLContainES6,\n  isHTMLURLArrayContainES6,\n  getHTMLScripts,\n};\n","import { isECMAScriptES5 } from \"@/lib/es6_check/src\";\nimport { getContentOriginPosition } from \"@/lib/es6_check/src/source-map\";\nimport fs from \"fs\";\n\nexport async function validateScript(\n    jsBundle: string,\n    sourceMap: string\n): Promise<string> {\n    const result = isECMAScriptES5(jsBundle);\n    let resultLog = '';\n    if (result.message === \"success\") {\n        console.log(`Js Bundle ESCheck, 通过`);\n        resultLog = `Js Bundle ESCheck, 通过`\n        return resultLog;\n    } else {\n        console.log(`Js Bundle ESCheck, 失败`);\n        resultLog = `Js Bundle ESCheck, 失败\\n`\n\n        console.log(`\n检测到语法错误， 常见的错误有:\n1. 代码中引入 const/let/await 等未编译的 ES6 语法\n2. 箭头函数 () => {}\n3. class\n请检查\n`);\n        resultLog += `检测到语法错误， 常见的错误有:\n1. 代码中引入 const/let/await 等未编译的 ES6 语法\n2. 箭头函数 () => {}\n3. class\n请检查\\n\\n`\n        console.log(`打包产物代码上下文为: ${result.message}\\n\\n`);\n        resultLog += `打包产物代码上下文为: ${result.message}\\n\\n`\n        if (result.errorPos) {\n            console.log(\n                `打包产物代码位置：第${result?.errorPos?.loc.line}行，第${result?.errorPos?.loc.column}列`\n            );\n            resultLog += `打包产物代码位置：第${result?.errorPos?.loc.line}行，第${result?.errorPos?.loc.column}列\\n`\n\n            const originFilePos = await getContentOriginPosition(jsBundle, sourceMap, {\n                line: result?.errorPos?.loc.line,\n                column: result?.errorPos?.loc.column,\n            });\n\n            if (!originFilePos) {\n                console.log(`未能获取到源代码位置`);\n                resultLog += `未能获取到源代码位置\\n`\n            }\n\n            if (originFilePos) {\n                console.log(\n                    `打包后存在 ES6 语法的原代码文件为: ${originFilePos.source} 第${originFilePos.line}行，第${originFilePos.column}列`\n                );\n                resultLog += `打包后存在 ES6 语法的原代码文件为: ${originFilePos.source} 第${originFilePos.line}行，第${originFilePos.column}列\\n`\n            }\n        }\n        return resultLog;\n    }\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Controlled as CodeMirror,\n  UnControlled as CodeMirror2,\n} from \"react-codemirror2\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/dracula.css\"; // 使用 Dracula 主题\nimport \"codemirror/mode/javascript/javascript\"; // 引入 JavaScript 语法高亮\nimport { parser } from \"@/lib/thriftNew\";\nimport { print } from \"@/lib/thriftNew/print\";\nimport { prettier } from \"@/lib/tools/format\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Button from \"@mui/material/Button\";\nimport {\n  START_THRIFT,\n  START_HTML,\n  START_JS_BUNDLE,\n  START_SOURCEMAP,\n  THRIFT_TIPS,\n  JS_ESCHECK_TIPS,\n  HTML_ESCHECK_TIPS,\n} from \"./constant\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { isHTMLInlineScriptContainES6 } from \"@/lib/es6_check/src\";\nimport sourceMap from \"source-map\";\nimport { validateScript } from \"./utils\";\n\nimport \"./index.css\";\n\nenum TAB_VALUES {\n  THRIFT_TO_TS = 0,\n  JS_BUNDLE = 1,\n  HTML = 2,\n}\n\nexport default function EsCheck() {\n  const [tabValues, setTabValues] = useState(TAB_VALUES.THRIFT_TO_TS);\n  const [thrift, setThrift] = useState(START_THRIFT);\n  const [jsBundleCode, setJsBundleCode] = useState(START_JS_BUNDLE);\n  const [htmlCode, setHtmlCode] = useState(START_HTML);\n  const [sourcemapCode, setSourcemapCode] = useState(START_SOURCEMAP);\n\n  const [tsCode, setTsCode] = useState(\"\");\n  const [jsBundleLogCode, setJsBundleLogCode] = useState(\"\");\n  const [htmlLogCode, setHtmlLogCode] = useState(\"\");\n\n  useEffect(() => {\n    // 创建一个 script 标签\n    const script = document.createElement(\"script\");\n    // 指定 unpkg 上的包地址，例如加载 lodash 4.17.21 的完整版（根据实际情况修改）\n    script.src = \"https://unpkg.com/source-map@0.7.4/dist/source-map.js\";\n    script.async = true;\n    // 将 script 标签添加到 body 中\n    document.body.appendChild(script);\n\n    // 可选：加载完成后的回调\n    script.onload = () => {\n      console.log(\"脚本加载完成！\");\n      (sourceMap.SourceMapConsumer as any).initialize({\n        \"lib/mappings.wasm\":\n          \"https://unpkg.com/source-map@0.7.4/lib/mappings.wasm\",\n      });\n      // 此时可以使用该包全局变量（如 lodash 通常挂载在 _ 上）\n    };\n\n    // 清理函数，在组件卸载时移除 script 标签\n    return () => {\n      document.body.removeChild(script);\n    };\n  }, []); // 空依赖数组，确保只在挂载和卸载时执行一次\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const handleChange = (editor: any, data: any, value: any) => {\n    setThrift(value);\n  };\n  const handleJsBundleChange = (editor: any, data: any, value: any) => {\n    setJsBundleCode(value);\n  };\n  const handleSourcemapChange = (editor: any, data: any, value: any) => {\n    setSourcemapCode(value);\n  };\n  const handleHtmlChange = (editor: any, data: any, value: any) => {\n    setHtmlCode(value);\n  };\n\n  const handleClick = async () => {\n    const ast = parser(\"\", thrift);\n    const tsCode = await print(ast);\n    // const result = await prettier(tsCode);\n    setTsCode(tsCode);\n  };\n\n  const hancleJsBundleClick = async () => {\n    const result = await validateScript(jsBundleCode, sourcemapCode);\n    setJsBundleLogCode(result);\n    console.log({ result });\n  };\n\n  const hancleHtmlClick = async () => {\n    const result = await isHTMLInlineScriptContainES6(htmlCode);\n    if (result.ok) {\n      setHtmlLogCode(\"HTML ESCheck, 通过\");\n\n      return true;\n    } else {\n      const errorResult =\n        \"HTML ESCheck, 失败\\n\" +\n        (await prettier(`错误信息: ${JSON.stringify(result.data)}`));\n      setHtmlLogCode(errorResult);\n      return false;\n    }\n  };\n  return (\n    <div className=\"ESCheck flex px-[15px] py-[15px] flex-col\">\n      <Tabs\n        value={tabValues}\n        indicatorColor=\"secondary\"\n        textColor=\"inherit\"\n        aria-label=\"full width tabs example\"\n        sx={{\n          \".MuiTab-root\": {\n            textTransform: \"none\", // 禁用自动大写\n          },\n        }}\n      >\n        <Tooltip title={THRIFT_TIPS} placement=\"bottom\">\n          <Tab\n            label=\"Thrift IDL 转 TypeScript\"\n            value={TAB_VALUES.THRIFT_TO_TS}\n            onClick={() => setTabValues(TAB_VALUES.THRIFT_TO_TS)}\n          />\n        </Tooltip>\n        <Tooltip title={JS_ESCHECK_TIPS} placement=\"bottom\">\n          <Tab\n            label=\"Js Bundle ESCheck\"\n            value={TAB_VALUES.JS_BUNDLE}\n            onClick={() => setTabValues(TAB_VALUES.JS_BUNDLE)}\n          />\n        </Tooltip>\n        <Tooltip title={HTML_ESCHECK_TIPS} placement=\"bottom\">\n          <Tab\n            label=\"HTML ESCheck\"\n            value={TAB_VALUES.HTML}\n            onClick={() => setTabValues(TAB_VALUES.HTML)}\n          />\n        </Tooltip>\n      </Tabs>\n      {tabValues === TAB_VALUES.JS_BUNDLE ? (\n        <div className=\"flex\">\n          <div className=\"flex flex-col\">\n            <CodeMirror\n              className=\"CodeMirror-js mb-[16px]\"\n              value={jsBundleCode}\n              options={{\n                mode: \"javascript\", // 设置编辑器模式为 JavaScript\n                theme: \"dracula\", // 使用 Dracula 主题\n                lineNumbers: true, // 显示行号\n                indentUnit: 2, // 设置缩进空格为 2\n                tabSize: 2, // 设置 Tab 大小为 2\n                autoCloseBrackets: true, // 自动闭合括号\n                matchBrackets: true, // 匹配括号\n                showCursorWhenSelecting: true, // 选中时显示光标\n                lineWrapping: true,\n              }}\n              onBeforeChange={handleJsBundleChange} // 每次编辑内容变化时更新 state\n            />\n            <CodeMirror\n              className=\"CodeMirror-js\"\n              value={sourcemapCode}\n              options={{\n                mode: \"javascript\", // 设置编辑器模式为 JavaScript\n                theme: \"dracula\", // 使用 Dracula 主题\n                lineNumbers: true, // 显示行号\n                indentUnit: 2, // 设置缩进空格为 2\n                tabSize: 2, // 设置 Tab 大小为 2\n                autoCloseBrackets: true, // 自动闭合括号\n                matchBrackets: true, // 匹配括号\n                showCursorWhenSelecting: true, // 选中时显示光标\n                lineWrapping: true,\n              }}\n              onBeforeChange={handleSourcemapChange} // 每次编辑内容变化时更新 state\n            />\n          </div>\n          <div className=\"mx-[10px] flex\">\n            <Button\n              style={{ margin: \"auto\" }}\n              className=\"h-[30px]\"\n              variant=\"contained\"\n              onClick={hancleJsBundleClick}\n            >\n              检查\n            </Button>\n          </div>\n\n          <CodeMirror2\n            className=\"CodeMirror-log\"\n            value={jsBundleLogCode}\n            options={{\n              mode: \"javascript\", // 设置编辑器模式为 JavaScript\n              theme: \"dracula\", // 使用 Dracula 主题\n              lineNumbers: true, // 显示行号\n              indentUnit: 2, // 设置缩进空格为 2\n              tabSize: 2, // 设置 Tab 大小为 2\n              autoCloseBrackets: true, // 自动闭合括号\n              matchBrackets: true, // 匹配括号\n              showCursorWhenSelecting: true, // 选中时显示光标\n              readOnly: true,\n              lineWrapping: true,\n            }}\n          />\n        </div>\n      ) : tabValues === TAB_VALUES.HTML ? (\n        <div className=\"flex\">\n          <CodeMirror\n            value={htmlCode}\n            options={{\n              mode: \"javascript\", // 设置编辑器模式为 JavaScript\n              theme: \"dracula\", // 使用 Dracula 主题\n              lineNumbers: true, // 显示行号\n              indentUnit: 2, // 设置缩进空格为 2\n              tabSize: 2, // 设置 Tab 大小为 2\n              autoCloseBrackets: true, // 自动闭合括号\n              matchBrackets: true, // 匹配括号\n              showCursorWhenSelecting: true, // 选中时显示光标\n              lineWrapping: true,\n            }}\n            onBeforeChange={handleHtmlChange} // 每次编辑内容变化时更新 state\n          />\n          <div className=\"mx-[10px] flex\">\n            <Button\n              style={{ margin: \"auto\" }}\n              className=\"h-[30px]\"\n              variant=\"contained\"\n              onClick={hancleHtmlClick}\n            >\n              检查\n            </Button>\n          </div>\n\n          <CodeMirror2\n            className=\"CodeMirror-log\"\n            value={htmlLogCode}\n            options={{\n              mode: \"javascript\", // 设置编辑器模式为 JavaScript\n              theme: \"dracula\", // 使用 Dracula 主题\n              lineNumbers: true, // 显示行号\n              indentUnit: 2, // 设置缩进空格为 2\n              tabSize: 2, // 设置 Tab 大小为 2\n              autoCloseBrackets: true, // 自动闭合括号\n              matchBrackets: true, // 匹配括号\n              showCursorWhenSelecting: true, // 选中时显示光标\n              readOnly: true,\n              lineWrapping: true,\n            }}\n          />\n        </div>\n      ) : (\n        <div className=\"flex\">\n          <CodeMirror\n            value={thrift}\n            options={{\n              mode: \"javascript\", // 设置编辑器模式为 JavaScript\n              theme: \"dracula\", // 使用 Dracula 主题\n              lineNumbers: true, // 显示行号\n              indentUnit: 2, // 设置缩进空格为 2\n              tabSize: 2, // 设置 Tab 大小为 2\n              autoCloseBrackets: true, // 自动闭合括号\n              matchBrackets: true, // 匹配括号\n              showCursorWhenSelecting: true, // 选中时显示光标\n              lineWrapping: true,\n            }}\n            onBeforeChange={handleChange} // 每次编辑内容变化时更新 state\n          />\n          <div className=\"mx-[10px] flex\">\n            <Button\n              style={{ margin: \"auto\" }}\n              className=\"h-[30px]\"\n              variant=\"contained\"\n              onClick={handleClick}\n            >\n              生成\n            </Button>\n          </div>\n\n          <CodeMirror2\n            value={tsCode}\n            options={{\n              mode: \"javascript\", // 设置编辑器模式为 JavaScript\n              theme: \"dracula\", // 使用 Dracula 主题\n              lineNumbers: true, // 显示行号\n              indentUnit: 2, // 设置缩进空格为 2\n              tabSize: 2, // 设置 Tab 大小为 2\n              autoCloseBrackets: true, // 自动闭合括号\n              matchBrackets: true, // 匹配括号\n              showCursorWhenSelecting: true, // 选中时显示光标\n              readOnly: true,\n              lineWrapping: true,\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","import { format } from \"prettier-standalone\";\n\nexport function prettier(source: string) {\n  return format(source, {\n    parser: \"typescript\",\n    semi: true,\n    printWidth: 80,\n    bracketSpacing: true,\n    tabWidth: 2,\n    trailingComma: \"none\",\n    useTabs: false,\n  });\n}\n"],"names":["debug","_getContentOriginPosition","rawContent","sourceMap","position","console","SourceMapConsumer","consumer","isECMAScriptES5","script","errorPos","message","parse","err","pos","startPos","_isHTMLInlineScriptContainES6","html","urls","scriptStrs","scriptObj","scripts","$","cheerio","_","val","children","child","allResult","Promise","_validateScript","jsBundle","result","resultLog","_result_errorPos","_result_errorPos1","_result_errorPos2","_result_errorPos3","_result_errorPos4","_result_errorPos5","originFilePos","getContentOriginPosition","EsCheck","tabValues","setTabValues","useState","thrift","setThrift","START_THRIFT","jsBundleCode","setJsBundleCode","START_JS_BUNDLE","htmlCode","setHtmlCode","START_HTML","sourcemapCode","setSourcemapCode","START_SOURCEMAP","tsCode","setTsCode","jsBundleLogCode","setJsBundleLogCode","htmlLogCode","setHtmlLogCode","useEffect","document","handleClick","ast","parser","print","hancleJsBundleClick","validateScript","hancleHtmlClick","source","isHTMLInlineScriptContainES6","JSON","format","Tabs","Tooltip","THRIFT_TIPS","Tab","JS_ESCHECK_TIPS","HTML_ESCHECK_TIPS","CodeMirror","editor","data","value","Button","CodeMirror2"],"mappings":"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"}